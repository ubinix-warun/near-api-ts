/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * NEAR Protocol JSON RPC API
 * OpenAPI spec version: 1.0.0
 */
import type { RpcErrorOneOf } from "./rpcErrorOneOf";
import type { RpcErrorOneOfThree } from "./rpcErrorOneOfThree";
import type { RpcErrorOneOfFive } from "./rpcErrorOneOfFive";
import type { RpcErrorData } from "./rpcErrorData";

/**
 * This struct may be returned from JSON RPC server in case of error
 It is expected that this struct has impl From<_> all other RPC errors
 like [RpcBlockError](crate::types::blocks::RpcBlockError)
 */
export type RpcError =
  | (RpcErrorOneOf & {
      cause?: unknown;
      /** Deprecated please use the `error_struct` instead */
      code: number;
      /**
       * Deprecated please use the `error_struct` instead
       * @nullable
       */
      data?: RpcErrorData;
      /** Deprecated please use the `error_struct` instead */
      message: string;
      name?: unknown;
    })
  | (RpcErrorOneOfThree & {
      cause?: unknown;
      /** Deprecated please use the `error_struct` instead */
      code: number;
      /**
       * Deprecated please use the `error_struct` instead
       * @nullable
       */
      data?: RpcErrorData;
      /** Deprecated please use the `error_struct` instead */
      message: string;
      name?: unknown;
    })
  | (RpcErrorOneOfFive & {
      cause?: unknown;
      /** Deprecated please use the `error_struct` instead */
      code: number;
      /**
       * Deprecated please use the `error_struct` instead
       * @nullable
       */
      data?: RpcErrorData;
      /** Deprecated please use the `error_struct` instead */
      message: string;
      name?: unknown;
    });
