/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * NEAR Protocol JSON RPC API
 * OpenAPI spec version: 1.0.0
 */

/**
 * Typed view of ExtCostsConfig to preserve JSON output field names in protocol
 config RPC output.
 */
export interface ExtCostsConfigView {
  /**
   * Base cost for multiexp
   * @minimum 0
   */
  alt_bn128_g1_multiexp_base: number;
  /**
   * Per element cost for multiexp
   * @minimum 0
   */
  alt_bn128_g1_multiexp_element: number;
  /**
   * Base cost for sum
   * @minimum 0
   */
  alt_bn128_g1_sum_base: number;
  /**
   * Per element cost for sum
   * @minimum 0
   */
  alt_bn128_g1_sum_element: number;
  /**
   * Base cost for pairing check
   * @minimum 0
   */
  alt_bn128_pairing_check_base: number;
  /**
   * Per element cost for pairing check
   * @minimum 0
   */
  alt_bn128_pairing_check_element: number;
  /**
   * Base cost for calling a host function.
   * @minimum 0
   */
  base: number;
  /** @minimum 0 */
  bls12381_g1_multiexp_base: number;
  /** @minimum 0 */
  bls12381_g1_multiexp_element: number;
  /** @minimum 0 */
  bls12381_g2_multiexp_base: number;
  /** @minimum 0 */
  bls12381_g2_multiexp_element: number;
  /** @minimum 0 */
  bls12381_map_fp2_to_g2_base: number;
  /** @minimum 0 */
  bls12381_map_fp2_to_g2_element: number;
  /** @minimum 0 */
  bls12381_map_fp_to_g1_base: number;
  /** @minimum 0 */
  bls12381_map_fp_to_g1_element: number;
  /** @minimum 0 */
  bls12381_p1_decompress_base: number;
  /** @minimum 0 */
  bls12381_p1_decompress_element: number;
  /** @minimum 0 */
  bls12381_p1_sum_base: number;
  /** @minimum 0 */
  bls12381_p1_sum_element: number;
  /** @minimum 0 */
  bls12381_p2_decompress_base: number;
  /** @minimum 0 */
  bls12381_p2_decompress_element: number;
  /** @minimum 0 */
  bls12381_p2_sum_base: number;
  /** @minimum 0 */
  bls12381_p2_sum_element: number;
  /** @minimum 0 */
  bls12381_pairing_base: number;
  /** @minimum 0 */
  bls12381_pairing_element: number;
  /** @minimum 0 */
  contract_compile_base: number;
  /** @minimum 0 */
  contract_compile_bytes: number;
  /**
   * Base cost of loading a pre-compiled contract
   * @minimum 0
   */
  contract_loading_base: number;
  /**
   * Cost per byte of loading a pre-compiled contract
   * @minimum 0
   */
  contract_loading_bytes: number;
  /**
   * Cost of calling ecrecover
   * @minimum 0
   */
  ecrecover_base: number;
  /**
   * Cost of getting ed25519 base
   * @minimum 0
   */
  ed25519_verify_base: number;
  /**
   * Cost of getting ed25519 per byte
   * @minimum 0
   */
  ed25519_verify_byte: number;
  /**
   * Cost of getting sha256 base
   * @minimum 0
   */
  keccak256_base: number;
  /**
   * Cost of getting sha256 per byte
   * @minimum 0
   */
  keccak256_byte: number;
  /**
   * Cost of getting sha256 base
   * @minimum 0
   */
  keccak512_base: number;
  /**
   * Cost of getting sha256 per byte
   * @minimum 0
   */
  keccak512_byte: number;
  /**
   * Cost for calling logging.
   * @minimum 0
   */
  log_base: number;
  /**
   * Cost for logging per byte
   * @minimum 0
   */
  log_byte: number;
  /**
   * Cost for calling `promise_and`
   * @minimum 0
   */
  promise_and_base: number;
  /**
   * Cost for calling `promise_and` for each promise
   * @minimum 0
   */
  promise_and_per_promise: number;
  /**
   * Cost for calling `promise_return`
   * @minimum 0
   */
  promise_return: number;
  /**
   * Cost for reading trie node from memory
   * @minimum 0
   */
  read_cached_trie_node: number;
  /**
   * Base cost for guest memory read
   * @minimum 0
   */
  read_memory_base: number;
  /**
   * Cost for guest memory read
   * @minimum 0
   */
  read_memory_byte: number;
  /**
   * Base cost for reading from register
   * @minimum 0
   */
  read_register_base: number;
  /**
   * Cost for reading byte from register
   * @minimum 0
   */
  read_register_byte: number;
  /**
   * Cost of getting ripemd160 base
   * @minimum 0
   */
  ripemd160_base: number;
  /**
   * Cost of getting ripemd160 per message block
   * @minimum 0
   */
  ripemd160_block: number;
  /**
   * Cost of getting sha256 base
   * @minimum 0
   */
  sha256_base: number;
  /**
   * Cost of getting sha256 per byte
   * @minimum 0
   */
  sha256_byte: number;
  /**
   * Storage trie check for key existence cost base
   * @minimum 0
   */
  storage_has_key_base: number;
  /**
   * Storage trie check for key existence per key byte
   * @minimum 0
   */
  storage_has_key_byte: number;
  /**
   * Create trie range iterator cost per byte of from key.
   * @minimum 0
   */
  storage_iter_create_from_byte: number;
  /**
   * Create trie prefix iterator cost base
   * @minimum 0
   */
  storage_iter_create_prefix_base: number;
  /**
   * Create trie prefix iterator cost per byte.
   * @minimum 0
   */
  storage_iter_create_prefix_byte: number;
  /**
   * Create trie range iterator cost base
   * @minimum 0
   */
  storage_iter_create_range_base: number;
  /**
   * Create trie range iterator cost per byte of to key.
   * @minimum 0
   */
  storage_iter_create_to_byte: number;
  /**
   * Trie iterator per key base cost
   * @minimum 0
   */
  storage_iter_next_base: number;
  /**
   * Trie iterator next key byte cost
   * @minimum 0
   */
  storage_iter_next_key_byte: number;
  /**
   * Trie iterator next key byte cost
   * @minimum 0
   */
  storage_iter_next_value_byte: number;
  /**
   * Storage trie read key overhead base cost, when doing large reads
   * @minimum 0
   */
  storage_large_read_overhead_base: number;
  /**
   * Storage trie read key overhead  per-byte cost, when doing large reads
   * @minimum 0
   */
  storage_large_read_overhead_byte: number;
  /**
   * Storage trie read key base cost
   * @minimum 0
   */
  storage_read_base: number;
  /**
   * Storage trie read key per byte cost
   * @minimum 0
   */
  storage_read_key_byte: number;
  /**
   * Storage trie read value cost per byte cost
   * @minimum 0
   */
  storage_read_value_byte: number;
  /**
   * Remove key from trie base cost
   * @minimum 0
   */
  storage_remove_base: number;
  /**
   * Remove key from trie per byte cost
   * @minimum 0
   */
  storage_remove_key_byte: number;
  /**
   * Remove key from trie ret value byte cost
   * @minimum 0
   */
  storage_remove_ret_value_byte: number;
  /**
   * Storage trie write key base cost
   * @minimum 0
   */
  storage_write_base: number;
  /**
   * Storage trie write cost per byte of evicted value.
   * @minimum 0
   */
  storage_write_evicted_byte: number;
  /**
   * Storage trie write key per byte cost
   * @minimum 0
   */
  storage_write_key_byte: number;
  /**
   * Storage trie write value per byte cost
   * @minimum 0
   */
  storage_write_value_byte: number;
  /**
   * Cost per reading trie node from DB
   * @minimum 0
   */
  touching_trie_node: number;
  /**
   * Base cost of decoding utf16. It's used for `log_utf16`.
   * @minimum 0
   */
  utf16_decoding_base: number;
  /**
   * Cost per byte of decoding utf16. It's used for `log_utf16`.
   * @minimum 0
   */
  utf16_decoding_byte: number;
  /**
   * Base cost of decoding utf8. It's used for `log_utf8` and `panic_utf8`.
   * @minimum 0
   */
  utf8_decoding_base: number;
  /**
   * Cost per byte of decoding utf8. It's used for `log_utf8` and `panic_utf8`.
   * @minimum 0
   */
  utf8_decoding_byte: number;
  /**
   * Cost of calling `validator_stake`.
   * @minimum 0
   */
  validator_stake_base: number;
  /**
   * Cost of calling `validator_total_stake`.
   * @minimum 0
   */
  validator_total_stake_base: number;
  /**
   * Base cost for guest memory write
   * @minimum 0
   */
  write_memory_base: number;
  /**
   * Cost for guest memory write per byte
   * @minimum 0
   */
  write_memory_byte: number;
  /**
   * Base cost for writing into register
   * @minimum 0
   */
  write_register_base: number;
  /**
   * Cost for writing byte into register
   * @minimum 0
   */
  write_register_byte: number;
  /**
   * Base cost for creating a yield promise.
   * @minimum 0
   */
  yield_create_base: number;
  /**
   * Per byte cost of arguments and method name.
   * @minimum 0
   */
  yield_create_byte: number;
  /**
   * Base cost for resuming a yield receipt.
   * @minimum 0
   */
  yield_resume_base: number;
  /**
   * Per byte cost of resume payload.
   * @minimum 0
   */
  yield_resume_byte: number;
}
