/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * NEAR Protocol JSON RPC API
 * OpenAPI spec version: 1.0.0
 */
import type { AccountId } from "./accountId";
import type { ExecutionMetadataView } from "./executionMetadataView";
import type { CryptoHash } from "./cryptoHash";
import type { ExecutionStatusView } from "./executionStatusView";

export interface ExecutionOutcomeView {
  /** The id of the account on which the execution happens. For transaction this is signer_id,
 for receipt this is receiver_id. */
  executor_id: AccountId;
  /**
   * The amount of the gas burnt by the given transaction or receipt.
   * @minimum 0
   */
  gas_burnt: number;
  /** Logs from this transaction or receipt. */
  logs: string[];
  /** Execution metadata, versioned */
  metadata?: ExecutionMetadataView;
  /** Receipt IDs generated by this transaction or receipt. */
  receipt_ids: CryptoHash[];
  /** Execution status. Contains the result in case of successful execution. */
  status: ExecutionStatusView;
  /** The amount of tokens burnt corresponding to the burnt gas amount.
 This value doesn't always equal to the `gas_burnt` multiplied by the gas price, because
 the prepaid gas price might be lower than the actual gas price and it creates a deficit.
 `tokens_burnt` also contains the penalty subtracted from refunds, while
 `gas_burnt` only contains the gas that we actually burn for the execution. */
  tokens_burnt: string;
}
