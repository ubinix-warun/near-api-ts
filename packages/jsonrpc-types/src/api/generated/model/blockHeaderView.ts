/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * NEAR Protocol JSON RPC API
 * OpenAPI spec version: 1.0.0
 */
import type { BlockHeaderViewApprovalsItem } from "./blockHeaderViewApprovalsItem";
import type { BlockHeaderViewBlockBodyHash } from "./blockHeaderViewBlockBodyHash";
import type { CryptoHash } from "./cryptoHash";
import type { SlashedValidator } from "./slashedValidator";
import type { BlockHeaderViewEpochSyncDataHash } from "./blockHeaderViewEpochSyncDataHash";
import type { Signature } from "./signature";
import type { ValidatorStakeView } from "./validatorStakeView";

export interface BlockHeaderView {
  approvals: BlockHeaderViewApprovalsItem[];
  /** @nullable */
  block_body_hash?: BlockHeaderViewBlockBodyHash;
  block_merkle_root: CryptoHash;
  /**
   * @minimum 0
   * @nullable
   */
  block_ordinal?: number | null;
  challenges_result: SlashedValidator[];
  challenges_root: CryptoHash;
  /** @nullable */
  chunk_endorsements?: number[][] | null;
  chunk_headers_root: CryptoHash;
  chunk_mask: boolean[];
  chunk_receipts_root: CryptoHash;
  chunk_tx_root: CryptoHash;
  /** @minimum 0 */
  chunks_included: number;
  epoch_id: CryptoHash;
  /** @nullable */
  epoch_sync_data_hash?: BlockHeaderViewEpochSyncDataHash;
  gas_price: string;
  hash: CryptoHash;
  /** @minimum 0 */
  height: number;
  last_ds_final_block: CryptoHash;
  last_final_block: CryptoHash;
  /** @minimum 0 */
  latest_protocol_version: number;
  next_bp_hash: CryptoHash;
  next_epoch_id: CryptoHash;
  outcome_root: CryptoHash;
  prev_hash: CryptoHash;
  /**
   * @minimum 0
   * @nullable
   */
  prev_height?: number | null;
  prev_state_root: CryptoHash;
  random_value: CryptoHash;
  /** TODO(2271): deprecated. */
  rent_paid: string;
  signature: Signature;
  /**
   * Legacy json number. Should not be used.
   * @minimum 0
   */
  timestamp: number;
  timestamp_nanosec: string;
  total_supply: string;
  validator_proposals: ValidatorStakeView[];
  /** TODO(2271): deprecated. */
  validator_reward: string;
}
