/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * NEAR Protocol JSON RPC API
 * OpenAPI spec version: 1.0.0
 */
import type { RpcStatusResponseDetailedDebugStatus } from "./rpcStatusResponseDetailedDebugStatus";
import type { CryptoHash } from "./cryptoHash";
import type { RpcStatusResponseNodeKey } from "./rpcStatusResponseNodeKey";
import type { PublicKey } from "./publicKey";
import type { StatusSyncInfo } from "./statusSyncInfo";
import type { RpcStatusResponseValidatorAccountId } from "./rpcStatusResponseValidatorAccountId";
import type { RpcStatusResponseValidatorPublicKey } from "./rpcStatusResponseValidatorPublicKey";
import type { ValidatorInfo } from "./validatorInfo";
import type { Version } from "./version";

export interface RpcStatusResponse {
  /** Unique chain id. */
  chain_id: string;
  /**
   * Information about last blocks, network, epoch and chain & chunk info.
   * @nullable
   */
  detailed_debug_status?: RpcStatusResponseDetailedDebugStatus;
  /** Genesis hash of the chain. */
  genesis_hash: CryptoHash;
  /**
   * Latest protocol version that this client supports.
   * @minimum 0
   */
  latest_protocol_version: number;
  /**
   * Deprecated; same as `validator_public_key` which you should use instead.
   * @nullable
   */
  node_key?: RpcStatusResponseNodeKey;
  /** Public key of the node. */
  node_public_key: PublicKey;
  /**
   * Currently active protocol version.
   * @minimum 0
   */
  protocol_version: number;
  /**
   * Address for RPC server.  None if node doesn't have RPC endpoint enabled.
   * @nullable
   */
  rpc_addr?: string | null;
  /** Sync status of the node. */
  sync_info: StatusSyncInfo;
  /** Uptime of the node. */
  uptime_sec: number;
  /**
   * Validator id of the node
   * @nullable
   */
  validator_account_id?: RpcStatusResponseValidatorAccountId;
  /**
   * Public key of the validator.
   * @nullable
   */
  validator_public_key?: RpcStatusResponseValidatorPublicKey;
  /** Current epoch validators. */
  validators: ValidatorInfo[];
  /** Binary version. */
  version: Version;
}
